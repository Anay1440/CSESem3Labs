$date
	Sun Sep 18 12:15:22 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module bcd_tb $end
$var wire 4 ! s [3:0] $end
$var reg 1 " cin $end
$var reg 4 # x [3:0] $end
$var reg 4 $ y [3:0] $end
$scope module fbas $end
$var wire 1 " cin $end
$var wire 1 % co $end
$var wire 1 & t1 $end
$var wire 1 ' t2 $end
$var wire 4 ( x [3:0] $end
$var wire 4 ) y [3:0] $end
$var wire 4 * st [3:0] $end
$var wire 4 + s [3:0] $end
$var wire 4 , k [3:0] $end
$var wire 1 - cout $end
$var wire 1 . c2 $end
$scope module stage0 $end
$var wire 1 " cin $end
$var wire 4 / x [3:0] $end
$var wire 4 0 y [3:0] $end
$var wire 4 1 s [3:0] $end
$var wire 1 - cout $end
$var wire 3 2 c [3:1] $end
$scope module stage0 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 " cin $end
$var wire 1 5 cout $end
$var wire 1 6 s $end
$upscope $end
$scope module stage1 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 : cout $end
$var wire 1 ; s $end
$upscope $end
$scope module stage2 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > cin $end
$var wire 1 ? cout $end
$var wire 1 @ s $end
$upscope $end
$scope module stage3 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 - cout $end
$var wire 1 D s $end
$upscope $end
$upscope $end
$scope module stage1 $end
$var wire 1 E cin $end
$var wire 4 F x [3:0] $end
$var wire 4 G y [3:0] $end
$var wire 4 H s [3:0] $end
$var wire 1 . cout $end
$var wire 3 I c [3:1] $end
$scope module stage0 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 E cin $end
$var wire 1 L cout $end
$var wire 1 M s $end
$upscope $end
$scope module stage1 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P cin $end
$var wire 1 Q cout $end
$var wire 1 R s $end
$upscope $end
$scope module stage2 $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 U cin $end
$var wire 1 V cout $end
$var wire 1 W s $end
$upscope $end
$scope module stage3 $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z cin $end
$var wire 1 . cout $end
$var wire 1 [ s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0[
1Z
0Y
1X
0W
1V
1U
1T
0S
0R
1Q
0P
1O
1N
1M
0L
0K
1J
b110 I
b1 H
b110 G
b1011 F
0E
1D
1C
0B
0A
0@
1?
0>
1=
1<
1;
0:
09
08
17
16
05
04
13
b100 2
b1011 1
b100 0
b111 /
1.
0-
b110 ,
b1 +
b1011 *
b100 )
b111 (
1'
0&
1%
b100 $
b111 #
0"
b1 !
$end
#20
1.
0[
1Z
1V
0W
0U
1&
b100 I
0Q
1O
1T
1S
b11 !
b11 +
b11 H
1R
b110 ,
b110 G
1%
1@
0'
1>
0N
b110 2
1:
b1101 *
b1101 1
b1101 F
0;
14
18
03
b111 $
b111 )
b111 0
b110 #
b110 (
b110 /
#40
