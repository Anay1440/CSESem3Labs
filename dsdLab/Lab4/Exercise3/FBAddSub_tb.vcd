$date
	Sun Sep 18 10:35:43 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module FBAddSub_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 1 # k $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module fbas $end
$var wire 1 # k $end
$var wire 4 & x [3:0] $end
$var wire 4 ' y [3:0] $end
$var wire 4 ( yk [3:0] $end
$var wire 4 ) s [3:0] $end
$var wire 1 " cout $end
$var wire 3 * c [3:1] $end
$scope module stage0 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 # cin $end
$var wire 1 - cout $end
$var wire 1 . s $end
$upscope $end
$scope module stage1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 s $end
$upscope $end
$scope module stage2 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 s $end
$upscope $end
$scope module stage3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 " cout $end
$var wire 1 < s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1<
0;
0:
19
18
07
16
05
04
03
12
01
10
1/
0.
0-
0,
0+
b10 *
b1100 )
b10 (
b10 '
b1010 &
b10 %
b1010 $
0#
0"
b1100 !
$end
#20
0"
1<
0;
07
06
b0 *
02
15
1.
b1111 !
b1111 )
13
b110 (
1+
0/
b110 %
b110 '
b1001 $
b1001 &
#40
1;
17
08
11
1"
16
1-
1<
b111 *
12
03
1,
00
1:
b1101 (
b1000 !
b1000 )
0.
0+
1/
1#
b10 %
b10 '
b1010 $
b1010 &
#60
05
1.
b1001 !
b1001 )
08
b1001 (
1+
14
b110 %
b110 '
b1111 $
b1111 &
#80
