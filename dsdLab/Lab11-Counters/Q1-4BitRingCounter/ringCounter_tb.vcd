$date
	Mon Nov 21 15:23:22 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ringCounter_tb $end
$var wire 4 ! Q [0:3] $end
$var reg 1 " clk $end
$var reg 1 # reset $end
$scope module ringCounterq $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var wire 2 $ t [1:0] $end
$var wire 4 % Q [0:3] $end
$scope module c $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var wire 2 & o [0:1] $end
$scope module ff1 $end
$var wire 1 " clk $end
$var wire 1 ' d $end
$var wire 1 # reset $end
$var reg 1 ( q $end
$upscope $end
$scope module ff2 $end
$var wire 1 ) clk $end
$var wire 1 * d $end
$var wire 1 # reset $end
$var reg 1 + q $end
$upscope $end
$upscope $end
$scope module d $end
$var wire 1 , En $end
$var wire 2 - w [1:0] $end
$var reg 4 . y [0:3] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 .
b0 -
1,
0+
1*
1)
0(
1'
b0 &
b1000 %
b0 $
1#
0"
b1000 !
$end
#10
1"
#20
0"
0#
#30
0)
0'
b100 !
b100 %
b100 .
b1 $
b1 &
b1 -
1(
1"
#40
0"
#50
0*
1+
1)
1'
b10 !
b10 %
b10 .
b10 $
b10 &
b10 -
0(
1"
#60
0"
#70
0)
0'
b1 !
b1 %
b1 .
b11 $
b11 &
b11 -
1(
1"
#80
0"
#90
1*
0+
1)
1'
b1000 !
b1000 %
b1000 .
b0 $
b0 &
b0 -
0(
1"
#100
0"
